local ryoku_path = sys.get_save_file("ryoku", "data_level")
local config = sys.load(ryoku_path)
--local list = require("ressources.listLevel")
--local currentLevel = list[config.level].path
local currentLevel = require("levels.template")
local languages = require("ressources.langages")
local modifier = require("ressources.modifier")

function resetColorFinger()
	gui.set_color(gui.get_node("finger_slid"), vmath.vector4(1, 1, 1, 1))
end

function resetPositionFinger()
	gui.set_position(gui.get_node("finger_slid"), vmath.vector3(172, -500, 0))
end

function setColorFingerFinish(self, node)
	self.colorTimer = timer.delay(2, false, function() 
		resetColorFinger()
		if self.aminateColor then
			setColorFinger(self)
		end
	end)
end

function setColorFinger(self)
	gui.animate(gui.get_node("finger_slid"), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 0), gui.EASING_INOUTQUAD, 2, 0.0, setColorFingerFinish, gui.PLAYBACK_ONCE_FORWARD)
end

function setPositionFingerFinish(self, node)
	self.positionTimer = timer.delay(2, false, function() 
		resetPositionFinger()
		if self.animatePosition then
			setPositionFinger(self)
		end
	end)
end

function setPositionFinger(self)
	gui.animate(gui.get_node("finger_slid"), gui.PROP_POSITION, vmath.vector3(-172, -500, 0), gui.EASING_INOUTQUAD, 2, 0.0, setPositionFingerFinish, gui.PLAYBACK_ONCE_FORWARD)
end

function slidUpOnce(self, node)
	timer.delay(0.5, false, function() 
		gui.set_enabled(gui.get_node("slide_up"), false)
	end)
end

function setTutoRuFont(self)
	-- WELCOME
	gui.set_font(gui.get_node("welcome_txt_header"), hash("RU_22"))
	gui.set_font(gui.get_node("welcome_txt_next"), hash("RU_30_border"))
	gui.set_font(gui.get_node("welcome_txt_1"), hash("RU_22"))
	gui.set_font(gui.get_node("welcome_txt_2"), hash("RU_22"))
	gui.set_font(gui.get_node("welcome_txt_3"), hash("RU_22"))
	gui.set_font(gui.get_node("welcome_txt_4"), hash("RU_22"))
	gui.set_font(gui.get_node("welcome_txt_5"), hash("RU_22"))
	gui.set_font(gui.get_node("welcome_txt_6"), hash("RU_22"))
	gui.set_font(gui.get_node("welcome_txt_7"), hash("RU_22"))
	gui.set_font(gui.get_node("welcome_txt_8"), hash("RU_22"))

	-- STORAGE
	gui.set_font(gui.get_node("storage_txt_header"), hash("RU_22"))
	gui.set_font(gui.get_node("storage_txt_next"), hash("RU_30_border"))
	gui.set_font(gui.get_node("storage_txt_1"), hash("RU_22"))
	gui.set_font(gui.get_node("storage_txt_2"), hash("RU_22"))
	gui.set_font(gui.get_node("storage_txt_3"), hash("RU_22"))
	gui.set_font(gui.get_node("storage_txt_4"), hash("RU_22"))
	gui.set_font(gui.get_node("storage_txt_5"), hash("RU_22"))

	-- NUMBER
	gui.set_font(gui.get_node("numero_txt_header"), hash("RU_22"))
	gui.set_font(gui.get_node("numero_txt_next"), hash("RU_30_border"))
	gui.set_font(gui.get_node("numero_txt_1"), hash("RU_22"))
	gui.set_font(gui.get_node("numero_txt_2"), hash("RU_22"))
	gui.set_font(gui.get_node("numero_txt_3"), hash("RU_22"))
	gui.set_font(gui.get_node("numero_txt_4"), hash("RU_22"))

	-- INDICATEUR GAUCHE
	gui.set_font(gui.get_node("indicateur_gauche_txt_header"), hash("RU_22"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_next"), hash("RU_30_border"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_1"), hash("RU_22"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_2"), hash("RU_22"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_3"), hash("RU_22"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_4"), hash("RU_22"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("indicateur_droit_txt_header"), hash("RU_22"))
	gui.set_font(gui.get_node("indicateur_droit_txt_next"), hash("RU_30_border"))
	gui.set_font(gui.get_node("indicateur_droit_txt_1"), hash("RU_22"))
	gui.set_font(gui.get_node("indicateur_droit_txt_2"), hash("RU_22"))
	gui.set_font(gui.get_node("indicateur_droit_txt_3"), hash("RU_22"))
	gui.set_font(gui.get_node("indicateur_droit_txt_4"), hash("RU_22"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("pieces_disponible_txt_header"), hash("RU_22"))
	gui.set_font(gui.get_node("pieces_disponible_txt_next"), hash("RU_30_border"))
	gui.set_font(gui.get_node("pieces_disponible_txt_1"), hash("RU_22"))
	gui.set_font(gui.get_node("pieces_disponible_txt_2"), hash("RU_22"))
	gui.set_font(gui.get_node("pieces_disponible_txt_3"), hash("RU_22"))
	gui.set_font(gui.get_node("pieces_disponible_txt_4"), hash("RU_22"))
end

function setTutoArbFont(self)
	-- WELCOME
	gui.set_font(gui.get_node("welcome_txt_header"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("welcome_txt_next"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("welcome_txt_1"), hash("ARB_25"))
	gui.set_font(gui.get_node("welcome_txt_2"), hash("ARB_25"))
	gui.set_font(gui.get_node("welcome_txt_3"), hash("ARB_25"))
	gui.set_font(gui.get_node("welcome_txt_4"), hash("ARB_25"))
	gui.set_font(gui.get_node("welcome_txt_5"), hash("ARB_25"))
	gui.set_font(gui.get_node("welcome_txt_6"), hash("ARB_25"))
	gui.set_font(gui.get_node("welcome_txt_7"), hash("ARB_25"))
	gui.set_font(gui.get_node("welcome_txt_8"), hash("ARB_25"))

	-- STORAGE
	gui.set_font(gui.get_node("storage_txt_header"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("storage_txt_next"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("storage_txt_1"), hash("ARB_25"))
	gui.set_font(gui.get_node("storage_txt_2"), hash("ARB_25"))
	gui.set_font(gui.get_node("storage_txt_3"), hash("ARB_25"))
	gui.set_font(gui.get_node("storage_txt_4"), hash("ARB_25"))
	gui.set_font(gui.get_node("storage_txt_5"), hash("ARB_25"))

	-- NUMBER
	gui.set_font(gui.get_node("numero_txt_header"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("numero_txt_next"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("numero_txt_1"), hash("ARB_25"))
	gui.set_font(gui.get_node("numero_txt_2"), hash("ARB_25"))
	gui.set_font(gui.get_node("numero_txt_3"), hash("ARB_25"))
	gui.set_font(gui.get_node("numero_txt_4"), hash("ARB_25"))

	-- INDICATEUR GAUCHE
	gui.set_font(gui.get_node("indicateur_gauche_txt_header"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_next"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_1"), hash("ARB_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_2"), hash("ARB_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_3"), hash("ARB_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_4"), hash("ARB_25"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("indicateur_droit_txt_header"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("indicateur_droit_txt_next"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("indicateur_droit_txt_1"), hash("ARB_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_2"), hash("ARB_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_3"), hash("ARB_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_4"), hash("ARB_25"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("pieces_disponible_txt_header"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("pieces_disponible_txt_next"), hash("ARB_35_border"))
	gui.set_font(gui.get_node("pieces_disponible_txt_1"), hash("ARB_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_2"), hash("ARB_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_3"), hash("ARB_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_4"), hash("ARB_25"))
end

function setTutoJaFont(self)
	-- WELCOME
	gui.set_font(gui.get_node("welcome_txt_header"), hash("JA_30_border"))
	gui.set_font(gui.get_node("welcome_txt_next"), hash("JA_30_border"))
	gui.set_font(gui.get_node("welcome_txt_1"), hash("JA_25"))
	gui.set_font(gui.get_node("welcome_txt_2"), hash("JA_25"))
	gui.set_font(gui.get_node("welcome_txt_3"), hash("JA_25"))
	gui.set_font(gui.get_node("welcome_txt_4"), hash("JA_25"))
	gui.set_font(gui.get_node("welcome_txt_5"), hash("JA_25"))
	gui.set_font(gui.get_node("welcome_txt_6"), hash("JA_25"))
	gui.set_font(gui.get_node("welcome_txt_7"), hash("JA_25"))
	gui.set_font(gui.get_node("welcome_txt_8"), hash("JA_25"))

	-- STORAGE
	gui.set_font(gui.get_node("storage_txt_header"), hash("JA_30_border"))
	gui.set_font(gui.get_node("storage_txt_next"), hash("JA_30_border"))
	gui.set_font(gui.get_node("storage_txt_1"), hash("JA_25"))
	gui.set_font(gui.get_node("storage_txt_2"), hash("JA_25"))
	gui.set_font(gui.get_node("storage_txt_3"), hash("JA_25"))
	gui.set_font(gui.get_node("storage_txt_4"), hash("JA_25"))
	gui.set_font(gui.get_node("storage_txt_5"), hash("JA_25"))

	-- NUMBER
	gui.set_font(gui.get_node("numero_txt_header"), hash("JA_30_border"))
	gui.set_font(gui.get_node("numero_txt_next"), hash("JA_30_border"))
	gui.set_font(gui.get_node("numero_txt_1"), hash("JA_25"))
	gui.set_font(gui.get_node("numero_txt_2"), hash("JA_25"))
	gui.set_font(gui.get_node("numero_txt_3"), hash("JA_25"))
	gui.set_font(gui.get_node("numero_txt_4"), hash("JA_25"))

	-- INDICATEUR GAUCHE
	gui.set_font(gui.get_node("indicateur_gauche_txt_header"), hash("JA_30_border"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_next"), hash("JA_30_border"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_1"), hash("JA_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_2"), hash("JA_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_3"), hash("JA_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_4"), hash("JA_25"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("indicateur_droit_txt_header"), hash("JA_30_border"))
	gui.set_font(gui.get_node("indicateur_droit_txt_next"), hash("JA_30_border"))
	gui.set_font(gui.get_node("indicateur_droit_txt_1"), hash("JA_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_2"), hash("JA_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_3"), hash("JA_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_4"), hash("JA_25"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("pieces_disponible_txt_header"), hash("JA_30_border"))
	gui.set_font(gui.get_node("pieces_disponible_txt_next"), hash("JA_30_border"))
	gui.set_font(gui.get_node("pieces_disponible_txt_1"), hash("JA_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_2"), hash("JA_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_3"), hash("JA_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_4"), hash("JA_25"))
end

function setTutoKrFont(self)
	-- WELCOME
	gui.set_font(gui.get_node("welcome_txt_header"), hash("KR_30_border"))
	gui.set_font(gui.get_node("welcome_txt_next"), hash("KR_30_border"))
	gui.set_font(gui.get_node("welcome_txt_1"), hash("KR_25"))
	gui.set_font(gui.get_node("welcome_txt_2"), hash("KR_25"))
	gui.set_font(gui.get_node("welcome_txt_3"), hash("KR_25"))
	gui.set_font(gui.get_node("welcome_txt_4"), hash("KR_25"))
	gui.set_font(gui.get_node("welcome_txt_5"), hash("KR_25"))
	gui.set_font(gui.get_node("welcome_txt_6"), hash("KR_25"))
	gui.set_font(gui.get_node("welcome_txt_7"), hash("KR_25"))
	gui.set_font(gui.get_node("welcome_txt_8"), hash("KR_25"))

	-- STORAGE
	gui.set_font(gui.get_node("storage_txt_header"), hash("KR_30_border"))
	gui.set_font(gui.get_node("storage_txt_next"), hash("KR_30_border"))
	gui.set_font(gui.get_node("storage_txt_1"), hash("KR_25"))
	gui.set_font(gui.get_node("storage_txt_2"), hash("KR_25"))
	gui.set_font(gui.get_node("storage_txt_3"), hash("KR_25"))
	gui.set_font(gui.get_node("storage_txt_4"), hash("KR_25"))
	gui.set_font(gui.get_node("storage_txt_5"), hash("KR_25"))

	-- NUMBER
	gui.set_font(gui.get_node("numero_txt_header"), hash("KR_30_border"))
	gui.set_font(gui.get_node("numero_txt_next"), hash("KR_30_border"))
	gui.set_font(gui.get_node("numero_txt_1"), hash("KR_25"))
	gui.set_font(gui.get_node("numero_txt_2"), hash("KR_25"))
	gui.set_font(gui.get_node("numero_txt_3"), hash("KR_25"))
	gui.set_font(gui.get_node("numero_txt_4"), hash("KR_25"))

	-- INDICATEUR GAUCHE
	gui.set_font(gui.get_node("indicateur_gauche_txt_header"), hash("KR_30_border"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_next"), hash("KR_30_border"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_1"), hash("KR_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_2"), hash("KR_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_3"), hash("KR_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_4"), hash("KR_25"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("indicateur_droit_txt_header"), hash("KR_30_border"))
	gui.set_font(gui.get_node("indicateur_droit_txt_next"), hash("KR_30_border"))
	gui.set_font(gui.get_node("indicateur_droit_txt_1"), hash("KR_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_2"), hash("KR_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_3"), hash("KR_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_4"), hash("KR_25"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("pieces_disponible_txt_header"), hash("KR_30_border"))
	gui.set_font(gui.get_node("pieces_disponible_txt_next"), hash("KR_30_border"))
	gui.set_font(gui.get_node("pieces_disponible_txt_1"), hash("KR_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_2"), hash("KR_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_3"), hash("KR_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_4"), hash("KR_25"))
end

function setTutoViFont(self)
	-- WELCOME
	gui.set_font(gui.get_node("welcome_txt_header"), hash("VI_30_border"))
	gui.set_font(gui.get_node("welcome_txt_next"), hash("VI_30_border"))
	gui.set_font(gui.get_node("welcome_txt_1"), hash("VI_25"))
	gui.set_font(gui.get_node("welcome_txt_2"), hash("VI_25"))
	gui.set_font(gui.get_node("welcome_txt_3"), hash("VI_25"))
	gui.set_font(gui.get_node("welcome_txt_4"), hash("VI_25"))
	gui.set_font(gui.get_node("welcome_txt_5"), hash("VI_25"))
	gui.set_font(gui.get_node("welcome_txt_6"), hash("VI_25"))
	gui.set_font(gui.get_node("welcome_txt_7"), hash("VI_25"))
	gui.set_font(gui.get_node("welcome_txt_8"), hash("VI_25"))

	-- STORAGE
	gui.set_font(gui.get_node("storage_txt_header"), hash("VI_30_border"))
	gui.set_font(gui.get_node("storage_txt_next"), hash("VI_30_border"))
	gui.set_font(gui.get_node("storage_txt_1"), hash("VI_25"))
	gui.set_font(gui.get_node("storage_txt_2"), hash("VI_25"))
	gui.set_font(gui.get_node("storage_txt_3"), hash("VI_25"))
	gui.set_font(gui.get_node("storage_txt_4"), hash("VI_25"))
	gui.set_font(gui.get_node("storage_txt_5"), hash("VI_25"))

	-- NUMBER
	gui.set_font(gui.get_node("numero_txt_header"), hash("VI_30_border"))
	gui.set_font(gui.get_node("numero_txt_next"), hash("VI_30_border"))
	gui.set_font(gui.get_node("numero_txt_1"), hash("VI_25"))
	gui.set_font(gui.get_node("numero_txt_2"), hash("VI_25"))
	gui.set_font(gui.get_node("numero_txt_3"), hash("VI_25"))
	gui.set_font(gui.get_node("numero_txt_4"), hash("VI_25"))

	-- INDICATEUR GAUCHE
	gui.set_font(gui.get_node("indicateur_gauche_txt_header"), hash("VI_30_border"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_next"), hash("VI_30_border"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_1"), hash("VI_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_2"), hash("VI_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_3"), hash("VI_25"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_4"), hash("VI_25"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("indicateur_droit_txt_header"), hash("VI_30_border"))
	gui.set_font(gui.get_node("indicateur_droit_txt_next"), hash("VI_30_border"))
	gui.set_font(gui.get_node("indicateur_droit_txt_1"), hash("VI_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_2"), hash("VI_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_3"), hash("VI_25"))
	gui.set_font(gui.get_node("indicateur_droit_txt_4"), hash("VI_25"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("pieces_disponible_txt_header"), hash("VI_30_border"))
	gui.set_font(gui.get_node("pieces_disponible_txt_next"), hash("VI_30_border"))
	gui.set_font(gui.get_node("pieces_disponible_txt_1"), hash("VI_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_2"), hash("VI_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_3"), hash("VI_25"))
	gui.set_font(gui.get_node("pieces_disponible_txt_4"), hash("VI_25"))
end

function setTutoLatineFont(self)
	-- WELCOME
	gui.set_font(gui.get_node("welcome_txt_header"), hash("PoetsenOne25_border"))
	gui.set_font(gui.get_node("welcome_txt_next"), hash("PoetsenOne40_border"))
	gui.set_font(gui.get_node("welcome_txt_1"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("welcome_txt_2"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("welcome_txt_3"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("welcome_txt_4"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("welcome_txt_5"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("welcome_txt_6"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("welcome_txt_7"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("welcome_txt_8"), hash("PoetsenOne22"))

	-- STORAGE
	gui.set_font(gui.get_node("storage_txt_header"), hash("PoetsenOne25_border"))
	gui.set_font(gui.get_node("storage_txt_next"), hash("PoetsenOne40_border"))
	gui.set_font(gui.get_node("storage_txt_1"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("storage_txt_2"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("storage_txt_3"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("storage_txt_4"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("storage_txt_5"), hash("PoetsenOne22"))

	-- NUMBER
	gui.set_font(gui.get_node("numero_txt_header"), hash("PoetsenOne25_border"))
	gui.set_font(gui.get_node("numero_txt_next"), hash("PoetsenOne40_border"))
	gui.set_font(gui.get_node("numero_txt_1"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("numero_txt_2"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("numero_txt_3"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("numero_txt_4"), hash("PoetsenOne22"))

	-- INDICATEUR GAUCHE
	gui.set_font(gui.get_node("indicateur_gauche_txt_header"), hash("PoetsenOne25_border"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_next"), hash("PoetsenOne40_border"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_1"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_2"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_3"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("indicateur_gauche_txt_4"), hash("PoetsenOne22"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("indicateur_droit_txt_header"), hash("PoetsenOne25_border"))
	gui.set_font(gui.get_node("indicateur_droit_txt_next"), hash("PoetsenOne40_border"))
	gui.set_font(gui.get_node("indicateur_droit_txt_1"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("indicateur_droit_txt_2"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("indicateur_droit_txt_3"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("indicateur_droit_txt_4"), hash("PoetsenOne22"))

	-- INDICATEUR DROIT
	gui.set_font(gui.get_node("pieces_disponible_txt_header"), hash("PoetsenOne25_border"))
	gui.set_font(gui.get_node("pieces_disponible_txt_next"), hash("PoetsenOne40_border"))
	gui.set_font(gui.get_node("pieces_disponible_txt_1"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("pieces_disponible_txt_2"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("pieces_disponible_txt_3"), hash("PoetsenOne22"))
	gui.set_font(gui.get_node("pieces_disponible_txt_4"), hash("PoetsenOne22"))
end

function setTutoTxtArabic(self)
	-- WELCOME
	gui.set_text(gui.get_node("welcome_txt_header"), modifier.modifierToArab(languages[config.game_language].welcome_txt_header))
	gui.set_text(gui.get_node("welcome_txt_next"), modifier.modifierToArab(languages[config.game_language].welcome_txt_next))
	gui.set_text(gui.get_node("welcome_txt_1"), modifier.modifierToArab(languages[config.game_language].welcome_txt_1))
	gui.set_text(gui.get_node("welcome_txt_2"), modifier.modifierToArab(languages[config.game_language].welcome_txt_2))
	gui.set_text(gui.get_node("welcome_txt_3"), modifier.modifierToArab(languages[config.game_language].welcome_txt_3))
	gui.set_text(gui.get_node("welcome_txt_4"), modifier.modifierToArab(languages[config.game_language].welcome_txt_4))
	gui.set_text(gui.get_node("welcome_txt_5"), modifier.modifierToArab(languages[config.game_language].welcome_txt_5))
	gui.set_text(gui.get_node("welcome_txt_6"), modifier.modifierToArab(languages[config.game_language].welcome_txt_6))
	gui.set_text(gui.get_node("welcome_txt_7"), modifier.modifierToArab(languages[config.game_language].welcome_txt_7))
	gui.set_text(gui.get_node("welcome_txt_8"), modifier.modifierToArab(languages[config.game_language].welcome_txt_8))

	-- STORAGE
	gui.set_text(gui.get_node("storage_txt_header"), modifier.modifierToArab(languages[config.game_language].storage_txt_header))
	gui.set_text(gui.get_node("storage_txt_next"), modifier.modifierToArab(languages[config.game_language].storage_txt_next))
	gui.set_text(gui.get_node("storage_txt_1"), modifier.modifierToArab(languages[config.game_language].storage_txt_1))
	gui.set_text(gui.get_node("storage_txt_2"), modifier.modifierToArab(languages[config.game_language].storage_txt_2))
	gui.set_text(gui.get_node("storage_txt_3"), modifier.modifierToArab(languages[config.game_language].storage_txt_3))
	gui.set_text(gui.get_node("storage_txt_4"), modifier.modifierToArab(languages[config.game_language].storage_txt_4))
	gui.set_text(gui.get_node("storage_txt_5"), modifier.modifierToArab(languages[config.game_language].storage_txt_5))

	-- NUMBER
	gui.set_text(gui.get_node("numero_txt_header"), modifier.modifierToArab(languages[config.game_language].numero_txt_header))
	gui.set_text(gui.get_node("numero_txt_next"), modifier.modifierToArab(languages[config.game_language].numero_txt_next))
	gui.set_text(gui.get_node("numero_txt_1"), modifier.modifierToArab(languages[config.game_language].numero_txt_1))
	gui.set_text(gui.get_node("numero_txt_2"), modifier.modifierToArab(languages[config.game_language].numero_txt_2))
	gui.set_text(gui.get_node("numero_txt_3"), modifier.modifierToArab(languages[config.game_language].numero_txt_3))
	gui.set_text(gui.get_node("numero_txt_4"), modifier.modifierToArab(languages[config.game_language].numero_txt_4))

	-- INDICATEUR GAUCHE
	gui.set_text(gui.get_node("indicateur_gauche_txt_header"), modifier.modifierToArab(languages[config.game_language].indicateur_gauche_txt_header))
	gui.set_text(gui.get_node("indicateur_gauche_txt_next"), modifier.modifierToArab(languages[config.game_language].indicateur_gauche_txt_next))
	gui.set_text(gui.get_node("indicateur_gauche_txt_1"), modifier.modifierToArab(languages[config.game_language].indicateur_gauche_txt_1))
	gui.set_text(gui.get_node("indicateur_gauche_txt_2"), modifier.modifierToArab(languages[config.game_language].indicateur_gauche_txt_2))
	gui.set_text(gui.get_node("indicateur_gauche_txt_3"), modifier.modifierToArab(languages[config.game_language].indicateur_gauche_txt_3))
	gui.set_text(gui.get_node("indicateur_gauche_txt_4"), modifier.modifierToArab(languages[config.game_language].indicateur_gauche_txt_4))

	-- INDICATEUR DROIT
	gui.set_text(gui.get_node("indicateur_droit_txt_header"), modifier.modifierToArab(languages[config.game_language].indicateur_droit_txt_header))
	gui.set_text(gui.get_node("indicateur_droit_txt_next"), modifier.modifierToArab(languages[config.game_language].indicateur_droit_txt_next))
	gui.set_text(gui.get_node("indicateur_droit_txt_1"), modifier.modifierToArab(languages[config.game_language].indicateur_droit_txt_1))
	gui.set_text(gui.get_node("indicateur_droit_txt_2"), modifier.modifierToArab(languages[config.game_language].indicateur_droit_txt_2))
	gui.set_text(gui.get_node("indicateur_droit_txt_3"), modifier.modifierToArab(languages[config.game_language].indicateur_droit_txt_3))
	gui.set_text(gui.get_node("indicateur_droit_txt_4"), modifier.modifierToArab(languages[config.game_language].indicateur_droit_txt_4))

	-- INDICATEUR DROIT
	gui.set_text(gui.get_node("pieces_disponible_txt_header"), modifier.modifierToArab(languages[config.game_language].pieces_disponible_txt_header))
	gui.set_text(gui.get_node("pieces_disponible_txt_next"), modifier.modifierToArab(languages[config.game_language].pieces_disponible_txt_next))
	gui.set_text(gui.get_node("pieces_disponible_txt_1"), modifier.modifierToArab(languages[config.game_language].pieces_disponible_txt_1))
	gui.set_text(gui.get_node("pieces_disponible_txt_2"), modifier.modifierToArab(languages[config.game_language].pieces_disponible_txt_2))
	gui.set_text(gui.get_node("pieces_disponible_txt_3"), modifier.modifierToArab(languages[config.game_language].pieces_disponible_txt_3))
	gui.set_text(gui.get_node("pieces_disponible_txt_4"), modifier.modifierToArab(languages[config.game_language].pieces_disponible_txt_4))
end

function setTutoTxtForAll(self)
	-- WELCOME
	gui.set_text(gui.get_node("welcome_txt_header"), languages[config.game_language].welcome_txt_header)
	gui.set_text(gui.get_node("welcome_txt_next"), languages[config.game_language].welcome_txt_next)
	gui.set_text(gui.get_node("welcome_txt_1"), languages[config.game_language].welcome_txt_1)
	gui.set_text(gui.get_node("welcome_txt_2"), languages[config.game_language].welcome_txt_2)
	gui.set_text(gui.get_node("welcome_txt_3"), languages[config.game_language].welcome_txt_3)
	gui.set_text(gui.get_node("welcome_txt_4"), languages[config.game_language].welcome_txt_4)
	gui.set_text(gui.get_node("welcome_txt_5"), languages[config.game_language].welcome_txt_5)
	gui.set_text(gui.get_node("welcome_txt_6"), languages[config.game_language].welcome_txt_6)
	gui.set_text(gui.get_node("welcome_txt_7"), languages[config.game_language].welcome_txt_7)
	gui.set_text(gui.get_node("welcome_txt_8"), languages[config.game_language].welcome_txt_8)

	-- STORAGE
	gui.set_text(gui.get_node("storage_txt_header"), languages[config.game_language].storage_txt_header)
	gui.set_text(gui.get_node("storage_txt_next"), languages[config.game_language].storage_txt_next)
	gui.set_text(gui.get_node("storage_txt_1"), languages[config.game_language].storage_txt_1)
	gui.set_text(gui.get_node("storage_txt_2"), languages[config.game_language].storage_txt_2)
	gui.set_text(gui.get_node("storage_txt_3"), languages[config.game_language].storage_txt_3)
	gui.set_text(gui.get_node("storage_txt_4"), languages[config.game_language].storage_txt_4)
	gui.set_text(gui.get_node("storage_txt_5"), languages[config.game_language].storage_txt_5)

	-- NUMBER
	gui.set_text(gui.get_node("numero_txt_header"), languages[config.game_language].numero_txt_header)
	gui.set_text(gui.get_node("numero_txt_next"), languages[config.game_language].numero_txt_next)
	gui.set_text(gui.get_node("numero_txt_1"), languages[config.game_language].numero_txt_1)
	gui.set_text(gui.get_node("numero_txt_2"), languages[config.game_language].numero_txt_2)
	gui.set_text(gui.get_node("numero_txt_3"), languages[config.game_language].numero_txt_3)
	gui.set_text(gui.get_node("numero_txt_4"), languages[config.game_language].numero_txt_4)

	-- INDICATEUR GAUCHE
	gui.set_text(gui.get_node("indicateur_gauche_txt_header"), languages[config.game_language].indicateur_gauche_txt_header)
	gui.set_text(gui.get_node("indicateur_gauche_txt_next"), languages[config.game_language].indicateur_gauche_txt_next)
	gui.set_text(gui.get_node("indicateur_gauche_txt_1"), languages[config.game_language].indicateur_gauche_txt_1)
	gui.set_text(gui.get_node("indicateur_gauche_txt_2"), languages[config.game_language].indicateur_gauche_txt_2)
	gui.set_text(gui.get_node("indicateur_gauche_txt_3"), languages[config.game_language].indicateur_gauche_txt_3)
	gui.set_text(gui.get_node("indicateur_gauche_txt_4"), languages[config.game_language].indicateur_gauche_txt_4)

	-- INDICATEUR DROIT
	gui.set_text(gui.get_node("indicateur_droit_txt_header"), languages[config.game_language].indicateur_droit_txt_header)
	gui.set_text(gui.get_node("indicateur_droit_txt_next"), languages[config.game_language].indicateur_droit_txt_next)
	gui.set_text(gui.get_node("indicateur_droit_txt_1"), languages[config.game_language].indicateur_droit_txt_1)
	gui.set_text(gui.get_node("indicateur_droit_txt_2"), languages[config.game_language].indicateur_droit_txt_2)
	gui.set_text(gui.get_node("indicateur_droit_txt_3"), languages[config.game_language].indicateur_droit_txt_3)
	gui.set_text(gui.get_node("indicateur_droit_txt_4"), languages[config.game_language].indicateur_droit_txt_4)

	-- INDICATEUR DROIT
	gui.set_text(gui.get_node("pieces_disponible_txt_header"), languages[config.game_language].pieces_disponible_txt_header)
	gui.set_text(gui.get_node("pieces_disponible_txt_next"), languages[config.game_language].pieces_disponible_txt_next)
	gui.set_text(gui.get_node("pieces_disponible_txt_1"), languages[config.game_language].pieces_disponible_txt_1)
	gui.set_text(gui.get_node("pieces_disponible_txt_2"), languages[config.game_language].pieces_disponible_txt_2)
	gui.set_text(gui.get_node("pieces_disponible_txt_3"), languages[config.game_language].pieces_disponible_txt_3)
	gui.set_text(gui.get_node("pieces_disponible_txt_4"), languages[config.game_language].pieces_disponible_txt_4)
end

function init(self)
	msg.post(".", "acquire_input_focus")
	
	self.colorTimer = nil
	self.positionTimer = nil
	self.aminateColor = true
	self.animatePosition = true
	if config.game_language == "ru" or config.game_language == "be" then
		setTutoRuFont(self)
	end
	if config.game_language == "ar" then
		setTutoArbFont(self)
	end
	if config.game_language == "ja" then
		setTutoJaFont(self)
	end
	if config.game_language == "ko" then
		setTutoKrFont(self)
	end
	if config.game_language == "vi" then
		setTutoViFont(self)
	end
	
	if config.game_language == "fr" or 
	config.game_language == "en" or 
	config.game_language == "es" or 
	config.game_language == "de" or 
	config.game_language == "pt" or 
	config.game_language == "pl" or 
	config.game_language == "nl" or 
	config.game_language == "tr" or 
	config.game_language == "it" or 
	config.game_language == "id" then
		setTutoLatineFont(self)
	end
	if config.game_language == "ar" then
		setTutoTxtArabic(self)
	else
		setTutoTxtForAll(self)
	end
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("start_tuto") then
		gui.set_enabled(gui.get_node("overlay"), true)
		gui.set_enabled(gui.get_node("welcome_ryoku"), true)
	end
	if message_id == hash("finish_storage_step") and self.colorTimer and self.positionTimer then
		timer.cancel(self.colorTimer)
		timer.cancel(self.positionTimer)
		self.aminateColor = false
		self.animatePosition = false
		currentLevel.platform.stopGame = true
		gui.set_enabled(gui.get_node("overlay_zone_blocks"), false)
		gui.set_enabled(gui.get_node("storage"), false)
		gui.set_enabled(gui.get_node("overlay_number_blocks"), true)
		gui.set_enabled(gui.get_node("numero_pieces"), true)
	end
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action.pressed then
		if gui.pick_node(gui.get_node("welcome_next_button"), action.x, action.y) and gui.is_enabled(gui.get_node("welcome_ryoku")) then
			currentLevel.platform.stopGame = false
			gui.set_enabled(gui.get_node("overlay"), false)
			gui.set_enabled(gui.get_node("welcome_ryoku"), false)
			gui.set_enabled(gui.get_node("overlay_zone_blocks"), true)
			gui.set_enabled(gui.get_node("storage"), true)
			setColorFinger(self)
			setPositionFinger(self)
		end
		if gui.pick_node(gui.get_node("pieces_disponible_next_button"), action.x, action.y) and gui.is_enabled(gui.get_node("pieces_disponible")) then
			gui.set_enabled(gui.get_node("overlay_available_blocks"), false)
			gui.set_enabled(gui.get_node("pieces_disponible"), false)
			currentLevel.platform.stopGame = false
			gui.set_enabled(gui.get_node("slide_up"), true)
			timer.delay(0.5, false, function() 
				gui.animate(gui.get_node("slide_up"), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 0), gui.EASING_INOUTQUAD, 2, 0.0, nil, gui.PLAYBACK_ONCE_FORWARD)
				gui.animate(gui.get_node("slide_up"), gui.PROP_POSITION, vmath.vector3(500, 800, 0), gui.EASING_INOUTQUAD, 2, 0.0, slidUpOnce, gui.PLAYBACK_ONCE_FORWARD)
			end)
		end
		if gui.pick_node(gui.get_node("indicateur_droit_next_button"), action.x, action.y) and gui.is_enabled(gui.get_node("indicateur_droit")) then
			gui.set_enabled(gui.get_node("overlay_right_slid"), false)
			gui.set_enabled(gui.get_node("indicateur_droit"), false)
			gui.set_enabled(gui.get_node("overlay_available_blocks"), true)
			gui.set_enabled(gui.get_node("pieces_disponible"), true)
		end
		if gui.pick_node(gui.get_node("indicateur_gauche_next_button"), action.x, action.y) and gui.is_enabled(gui.get_node("indicateur_gauche")) then
			gui.set_enabled(gui.get_node("overlay_left_slid"), false)
			gui.set_enabled(gui.get_node("indicateur_gauche"), false)
			gui.set_enabled(gui.get_node("overlay_right_slid"), true)
			gui.set_enabled(gui.get_node("indicateur_droit"), true)
		end
		if gui.pick_node(gui.get_node("numero_next_button"), action.x, action.y) and gui.is_enabled(gui.get_node("numero_pieces")) then
			gui.set_enabled(gui.get_node("overlay_number_blocks"), false)
			gui.set_enabled(gui.get_node("numero_pieces"), false)
			gui.set_enabled(gui.get_node("overlay_left_slid"), true)
			gui.set_enabled(gui.get_node("indicateur_gauche"), true)
		end
	end
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
